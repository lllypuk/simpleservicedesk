name: Pull Request Checks

on:
  pull_request:
    branches: [ main, master ]
  push:
    branches: [ main, master ]

jobs:
  lint:
    name: Lint Code
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4

    - name: Create .env file
      run: |
        cat > .env << EOF
        MONGO_URI=mongodb://localhost:27017/simpleservicedesk
        ENVIRONMENT=test
        EOF

    - name: Set up Go
      uses: actions/setup-go@v5
      with:
        go-version: '1.24'

    - name: Install dependencies
      run: |
        go mod download
        go install golang.org/x/tools/cmd/goimports@latest
        go install github.com/golangci/golangci-lint/v2/cmd/golangci-lint@v2.3.0

    - name: Run linting
      run: make lint

  test:
    name: Run Tests
    runs-on: ubuntu-latest
    services:
      mongodb:
        image: mongo:7.0
        env:
          MONGO_INITDB_ROOT_USERNAME: root
          MONGO_INITDB_ROOT_PASSWORD: password
        ports:
          - 27017:27017
        options: >-
          --health-cmd "mongosh --eval 'db.adminCommand(\"ping\")'"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    steps:
    - uses: actions/checkout@v4

    - name: Set up Go
      uses: actions/setup-go@v5
      with:
        go-version: '1.24'

    - name: Install dependencies
      run: go mod download

    - name: Create .env file
      run: |
        cat > .env << EOF
        MONGO_URI=mongodb://root:password@localhost:27017/?authSource=admin
        ENVIRONMENT=test
        EOF

    - name: Run unit tests
      run: make unit_test

    - name: Run integration tests
      run: make integration_test

  generate-check:
    name: Check Code Generation
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4

    - name: Create .env file
      run: |
        cat > .env << EOF
        MONGO_URI=mongodb://localhost:27017/simpleservicedesk
        ENVIRONMENT=test
        EOF

    - name: Set up Go
      uses: actions/setup-go@v5
      with:
        go-version: '1.24'

    - name: Install dependencies
      run: |
        go mod download
        go install github.com/deepmap/oapi-codegen/cmd/oapi-codegen@latest

    - name: Run code generation
      run: make generate

    - name: Check for uncommitted changes
      run: |
        if [ -n "$(git status --porcelain)" ]; then
          echo "Generated code is out of date. Please run 'make generate' and commit the changes."
          git status --porcelain
          exit 1
        fi

  coverage:
    name: Coverage Report
    runs-on: ubuntu-latest
    services:
      mongodb:
        image: mongo:7.0
        env:
          MONGO_INITDB_ROOT_USERNAME: root
          MONGO_INITDB_ROOT_PASSWORD: password
        ports:
          - 27017:27017
        options: >-
          --health-cmd "mongosh --eval 'db.adminCommand(\"ping\")'"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    steps:
    - uses: actions/checkout@v4

    - name: Set up Go
      uses: actions/setup-go@v5
      with:
        go-version: '1.24'

    - name: Install dependencies
      run: go mod download

    - name: Create .env file
      run: |
        cat > .env << EOF
        MONGO_URI=mongodb://root:password@localhost:27017/?authSource=admin
        ENVIRONMENT=test
        EOF

    - name: Run tests with coverage
      run: go test -p=1 -coverpkg=./... -count=1 -coverprofile=coverage.out ./...

    - name: Upload coverage to Codecov
      uses: codecov/codecov-action@v4
      with:
        file: ./coverage.out
        flags: unittests
        name: codecov-umbrella
        fail_ci_if_error: false

  security:
    name: Security Scan
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4

    - name: Set up Go
      uses: actions/setup-go@v5
      with:
        go-version: '1.24'

    - name: Install Gosec
      run: |
        curl -sfL https://raw.githubusercontent.com/securecodewarrior/gosec/master/install.sh | sh -s -- -b $(go env GOPATH)/bin v2.18.2
        echo "$(go env GOPATH)/bin" >> $GITHUB_PATH

    - name: Run Gosec Security Scanner
      run: gosec ./...
